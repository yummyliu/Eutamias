// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/Clientmsg.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ServerTimeReq struct {
}

func (m *ServerTimeReq) Reset()                    { *m = ServerTimeReq{} }
func (m *ServerTimeReq) String() string            { return proto.CompactTextString(m) }
func (*ServerTimeReq) ProtoMessage()               {}
func (*ServerTimeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type ServerTimeRsp struct {
	ServerTime uint64 `protobuf:"varint,1,opt,name=ServerTime" json:"ServerTime,omitempty"`
}

func (m *ServerTimeRsp) Reset()                    { *m = ServerTimeRsp{} }
func (m *ServerTimeRsp) String() string            { return proto.CompactTextString(m) }
func (*ServerTimeRsp) ProtoMessage()               {}
func (*ServerTimeRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ServerTimeRsp) GetServerTime() uint64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

type LoginReq struct {
	Id           uint64       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Passwd       string       `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
	OnlineStatue OnlineStatus `protobuf:"varint,3,opt,name=online_statue,json=onlineStatue,enum=rpc.OnlineStatus" json:"online_statue,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *LoginReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LoginReq) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *LoginReq) GetOnlineStatue() OnlineStatus {
	if m != nil {
		return m.OnlineStatue
	}
	return OnlineStatus_OS_ONLINE
}

type LoginRsp struct {
	Id         uint64     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResultCode ResultCode `protobuf:"varint,2,opt,name=result_code,json=resultCode,enum=rpc.ResultCode" json:"result_code,omitempty"`
	ResultStr  string     `protobuf:"bytes,3,opt,name=result_str,json=resultStr" json:"result_str,omitempty"`
}

func (m *LoginRsp) Reset()                    { *m = LoginRsp{} }
func (m *LoginRsp) String() string            { return proto.CompactTextString(m) }
func (*LoginRsp) ProtoMessage()               {}
func (*LoginRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *LoginRsp) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LoginRsp) GetResultCode() ResultCode {
	if m != nil {
		return m.ResultCode
	}
	return ResultCode_RC_DEFAULT
}

func (m *LoginRsp) GetResultStr() string {
	if m != nil {
		return m.ResultStr
	}
	return ""
}

type LogoutReq struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *LogoutReq) Reset()                    { *m = LogoutReq{} }
func (m *LogoutReq) String() string            { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()               {}
func (*LogoutReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *LogoutReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type LogoutRsp struct {
	Id         uint64     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ResultCode ResultCode `protobuf:"varint,2,opt,name=result_code,json=resultCode,enum=rpc.ResultCode" json:"result_code,omitempty"`
	ResultStr  string     `protobuf:"bytes,3,opt,name=result_str,json=resultStr" json:"result_str,omitempty"`
}

func (m *LogoutRsp) Reset()                    { *m = LogoutRsp{} }
func (m *LogoutRsp) String() string            { return proto.CompactTextString(m) }
func (*LogoutRsp) ProtoMessage()               {}
func (*LogoutRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *LogoutRsp) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LogoutRsp) GetResultCode() ResultCode {
	if m != nil {
		return m.ResultCode
	}
	return ResultCode_RC_DEFAULT
}

func (m *LogoutRsp) GetResultStr() string {
	if m != nil {
		return m.ResultStr
	}
	return ""
}

type NinfoReq struct {
	Id uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *NinfoReq) Reset()                    { *m = NinfoReq{} }
func (m *NinfoReq) String() string            { return proto.CompactTextString(m) }
func (*NinfoReq) ProtoMessage()               {}
func (*NinfoReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *NinfoReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type NinfoRsp struct {
	Id    uint64     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Nip   string     `protobuf:"bytes,2,opt,name=Nip" json:"Nip,omitempty"`
	Nport uint64     `protobuf:"varint,3,opt,name=Nport" json:"Nport,omitempty"`
	Rc    ResultCode `protobuf:"varint,4,opt,name=rc,enum=rpc.ResultCode" json:"rc,omitempty"`
}

func (m *NinfoRsp) Reset()                    { *m = NinfoRsp{} }
func (m *NinfoRsp) String() string            { return proto.CompactTextString(m) }
func (*NinfoRsp) ProtoMessage()               {}
func (*NinfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *NinfoRsp) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NinfoRsp) GetNip() string {
	if m != nil {
		return m.Nip
	}
	return ""
}

func (m *NinfoRsp) GetNport() uint64 {
	if m != nil {
		return m.Nport
	}
	return 0
}

func (m *NinfoRsp) GetRc() ResultCode {
	if m != nil {
		return m.Rc
	}
	return ResultCode_RC_DEFAULT
}

type SendMsgReq struct {
	Id        uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SessionId uint64 `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *SendMsgReq) Reset()                    { *m = SendMsgReq{} }
func (m *SendMsgReq) String() string            { return proto.CompactTextString(m) }
func (*SendMsgReq) ProtoMessage()               {}
func (*SendMsgReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *SendMsgReq) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SendMsgReq) GetSessionId() uint64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type SendMsgRsp struct {
	ResultCode ResultCode `protobuf:"varint,1,opt,name=result_code,json=resultCode,enum=rpc.ResultCode" json:"result_code,omitempty"`
	ResultStr  string     `protobuf:"bytes,2,opt,name=result_str,json=resultStr" json:"result_str,omitempty"`
	Sip        string     `protobuf:"bytes,3,opt,name=Sip" json:"Sip,omitempty"`
	Sport      uint64     `protobuf:"varint,4,opt,name=Sport" json:"Sport,omitempty"`
}

func (m *SendMsgRsp) Reset()                    { *m = SendMsgRsp{} }
func (m *SendMsgRsp) String() string            { return proto.CompactTextString(m) }
func (*SendMsgRsp) ProtoMessage()               {}
func (*SendMsgRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *SendMsgRsp) GetResultCode() ResultCode {
	if m != nil {
		return m.ResultCode
	}
	return ResultCode_RC_DEFAULT
}

func (m *SendMsgRsp) GetResultStr() string {
	if m != nil {
		return m.ResultStr
	}
	return ""
}

func (m *SendMsgRsp) GetSip() string {
	if m != nil {
		return m.Sip
	}
	return ""
}

func (m *SendMsgRsp) GetSport() uint64 {
	if m != nil {
		return m.Sport
	}
	return 0
}

func init() {
	proto.RegisterType((*ServerTimeReq)(nil), "rpc.ServerTimeReq")
	proto.RegisterType((*ServerTimeRsp)(nil), "rpc.ServerTimeRsp")
	proto.RegisterType((*LoginReq)(nil), "rpc.LoginReq")
	proto.RegisterType((*LoginRsp)(nil), "rpc.LoginRsp")
	proto.RegisterType((*LogoutReq)(nil), "rpc.LogoutReq")
	proto.RegisterType((*LogoutRsp)(nil), "rpc.LogoutRsp")
	proto.RegisterType((*NinfoReq)(nil), "rpc.NinfoReq")
	proto.RegisterType((*NinfoRsp)(nil), "rpc.NinfoRsp")
	proto.RegisterType((*SendMsgReq)(nil), "rpc.SendMsgReq")
	proto.RegisterType((*SendMsgRsp)(nil), "rpc.SendMsgRsp")
}

func init() { proto.RegisterFile("rpc/Clientmsg.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x52, 0x41, 0x6f, 0xda, 0x30,
	0x18, 0x55, 0x42, 0x86, 0xc8, 0xb7, 0x01, 0x9b, 0x87, 0xa6, 0x88, 0x89, 0x0d, 0xf9, 0xc4, 0x09,
	0x26, 0x26, 0xed, 0xb2, 0xdb, 0xd8, 0xa5, 0x12, 0xa5, 0x92, 0xd3, 0x7b, 0x44, 0x93, 0x8f, 0xc8,
	0x6d, 0xb0, 0x8d, 0x6d, 0xda, 0x5f, 0xd0, 0xff, 0x5d, 0xc5, 0x09, 0xd0, 0xd2, 0x5c, 0x7a, 0xe9,
	0xed, 0x7b, 0xef, 0x25, 0xfe, 0xde, 0x7b, 0x36, 0x7c, 0xd5, 0x2a, 0x9d, 0x2d, 0x0a, 0x8e, 0xc2,
	0x6e, 0x4d, 0x3e, 0x55, 0x5a, 0x5a, 0x49, 0x5a, 0x5a, 0xa5, 0xc3, 0x41, 0xa9, 0xfc, 0x5b, 0x1b,
	0xfc, 0x8f, 0x1b, 0x2e, 0xb0, 0x92, 0x68, 0x1f, 0xba, 0x31, 0xea, 0x7b, 0xd4, 0xd7, 0x7c, 0x8b,
	0x0c, 0x77, 0x74, 0xf6, 0x82, 0x30, 0x8a, 0xfc, 0x00, 0x38, 0x11, 0x91, 0x37, 0xf6, 0x26, 0x01,
	0x7b, 0xc6, 0xd0, 0x5b, 0xe8, 0x2c, 0x65, 0xce, 0x05, 0xc3, 0x1d, 0xe9, 0x81, 0xcf, 0xb3, 0xfa,
	0x1b, 0x9f, 0x67, 0xe4, 0x1b, 0xb4, 0xd5, 0xda, 0x98, 0x87, 0x2c, 0xf2, 0xc7, 0xde, 0x24, 0x64,
	0x35, 0x22, 0x7f, 0xa0, 0x2b, 0x45, 0xc1, 0x05, 0x26, 0xc6, 0xae, 0xed, 0x1e, 0xa3, 0xd6, 0xd8,
	0x9b, 0xf4, 0xe6, 0x5f, 0xa6, 0x5a, 0xa5, 0xd3, 0x2b, 0xa7, 0xc4, 0xa5, 0x60, 0xd8, 0x27, 0x79,
	0x42, 0x48, 0xef, 0x0e, 0xbb, 0x8c, 0x7a, 0xb5, 0xeb, 0x17, 0x7c, 0xd4, 0x68, 0xf6, 0x85, 0x4d,
	0x52, 0x99, 0xa1, 0x5b, 0xd8, 0x9b, 0xf7, 0xdd, 0x89, 0xcc, 0xf1, 0x0b, 0x99, 0x21, 0x03, 0x7d,
	0x9c, 0xc9, 0x08, 0x6a, 0x94, 0x18, 0xab, 0x9d, 0x85, 0x90, 0x85, 0x15, 0x13, 0x5b, 0x4d, 0xbf,
	0x43, 0xb8, 0x94, 0xb9, 0xdc, 0xdb, 0x86, 0x64, 0xb4, 0x38, 0x8a, 0xef, 0x61, 0x65, 0x08, 0x9d,
	0x15, 0x17, 0x1b, 0xd9, 0xe4, 0x24, 0x3d, 0x68, 0x0d, 0x46, 0x3e, 0x43, 0x6b, 0xc5, 0x55, 0x5d,
	0x7e, 0x39, 0x92, 0x01, 0x7c, 0x58, 0x29, 0xa9, 0xad, 0xdb, 0x11, 0xb0, 0x0a, 0x90, 0x9f, 0xe0,
	0xeb, 0x34, 0x0a, 0x9a, 0x7d, 0xfa, 0x3a, 0xa5, 0x7f, 0xcb, 0x47, 0x20, 0xb2, 0x4b, 0x93, 0x37,
	0x5d, 0xf3, 0x08, 0xc0, 0xa0, 0x31, 0x5c, 0x8a, 0x84, 0x57, 0x57, 0x1d, 0xb0, 0xb0, 0x66, 0x2e,
	0x32, 0xfa, 0xe8, 0x9d, 0xfe, 0x36, 0xea, 0xbc, 0x1d, 0xef, 0xad, 0xed, 0xf8, 0x67, 0xed, 0x94,
	0x29, 0x63, 0xae, 0xea, 0xd6, 0xca, 0xb1, 0x4c, 0x19, 0xbb, 0x94, 0x41, 0x95, 0xd2, 0x81, 0x9b,
	0xb6, 0x7b, 0xf2, 0xbf, 0x9f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x09, 0xf1, 0x6e, 0x24, 0x03,
	0x00, 0x00,
}
